{"ast":null,"code":"var _jsxFileName = \"/Users/rakitha.fernando/intern-site/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport './component.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleInputChange = (idx, event) => {\n      const target = event.target;\n      const name = target.name;\n      let error = '';\n\n      if (isNaN(target.value)) {\n        error = `${name} field can only be number`;\n      }\n\n      if (!target.value) {\n        error = `${name} field cannot be empty`;\n      }\n\n      this.state.inputs[idx] = { ...this.state.inputs[idx],\n        value: target.value,\n        error\n      };\n      this.setState({\n        inputs: [...this.state.inputs]\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: this.state.inputs.map((input, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: input.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input.value,\n            onChange: e => this.handleInputChange(idx, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), input.error && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: input.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;\n{\n  /* <div className=\"form-field\">\n                         <label className=\"field-name\">Email address</label>\n                         <input type=\"email\" className=\"field\" placeholder=\"john@gmail.com\" style={{fontSize: 17}}/><br/>\n                     </div>\n                     <div className=\"form-field\">\n                         <label className=\"field-name\">Password</label>\n                         <input type=\"password\" className=\"field\" placeholder=\"password\" style={{fontSize: 17}}/><br/>\n                     </div>\n                     <div className=\"form-field\">\n                         <button className=\"form-button\" >Login</button>\n                     </div> */\n}","map":{"version":3,"sources":["/Users/rakitha.fernando/intern-site/src/components/Login.js"],"names":["React","Component","Login","handleInputChange","idx","event","target","name","error","isNaN","value","state","inputs","setState","render","map","input","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAE1BE,iBAF0B,GAEN,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChC,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,UAAIC,KAAK,GAAG,EAAZ;;AAEA,UAAIC,KAAK,CAACH,MAAM,CAACI,KAAR,CAAT,EAAyB;AACvBF,QAAAA,KAAK,GAAI,GAAED,IAAK,2BAAhB;AACD;;AAED,UAAI,CAACD,MAAM,CAACI,KAAZ,EAAmB;AACjBF,QAAAA,KAAK,GAAI,GAAED,IAAK,wBAAhB;AACD;;AAED,WAAKI,KAAL,CAAWC,MAAX,CAAkBR,GAAlB,IAAyB,EACvB,GAAG,KAAKO,KAAL,CAAWC,MAAX,CAAkBR,GAAlB,CADoB;AAEtBM,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFQ;AAGvBF,QAAAA;AAHuB,OAAzB;AAMA,WAAKK,QAAL,CAAc;AACZD,QAAAA,MAAM,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf;AADI,OAAd;AAGD,KAxBuB;AAAA;;AA0B1BE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACC,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,GAAlB,CAAsB,CAACC,KAAD,EAAQZ,GAAR,kBAC7B;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,EAAf;AAAA,sBAAmBY,KAAK,CAACT;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAES,KAAK,CAACN,KAAhC;AAAuC,YAAA,QAAQ,EAAGO,CAAD,IAAO,KAAKd,iBAAL,CAAuBC,GAAvB,EAA4Ba,CAA5B;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAFA,EAGCD,KAAK,CAACR,KAAN,iBAAe;AAAA,sBAAOQ,KAAK,CAACR;AAAb;AAAA;AAAA;AAAA;AAAA,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO;AADD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA1CyB;;AA6C9B,eAAeN,KAAf;AAEA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAA8B","sourcesContent":["import React, { Component } from 'react';\nimport './component.css'\n\nclass Login extends Component {\n\n    handleInputChange = (idx, event) => {\n        const target = event.target;\n        const name = target.name;\n        let error = '';\n    \n        if (isNaN(target.value)) {\n          error = `${name} field can only be number`\n        }\n    \n        if (!target.value) {\n          error = `${name} field cannot be empty`\n        }\n    \n        this.state.inputs[idx] = {\n          ...this.state.inputs[idx],\n           value: target.value,\n          error\n        }\n    \n        this.setState({\n          inputs: [...this.state.inputs]\n        });\n      }\n\n    render(){\n        return(\n            <div className='login'>\n                <div><h2>Log in</h2></div>\n                <form>\n                {this.state.inputs.map((input, idx) => (\n          <div>\n          <label htmlFor=\"\">{input.name}</label>\n          <input type=\"text\" value={input.value} onChange={(e) => this.handleInputChange(idx, e)}/>\n          {input.error && <span>{input.error}</span> }\n          </div>\n        ))}\n                </form>\n                \n            </div>\n        );\n    }\n}\n\nexport default Login;\n\n{/* <div className=\"form-field\">\n                        <label className=\"field-name\">Email address</label>\n                        <input type=\"email\" className=\"field\" placeholder=\"john@gmail.com\" style={{fontSize: 17}}/><br/>\n                    </div>\n                    <div className=\"form-field\">\n                        <label className=\"field-name\">Password</label>\n                        <input type=\"password\" className=\"field\" placeholder=\"password\" style={{fontSize: 17}}/><br/>\n                    </div>\n                    <div className=\"form-field\">\n                        <button className=\"form-button\" >Login</button>\n                    </div> */}"]},"metadata":{},"sourceType":"module"}